class StaticPattern:
"""
 Class: StaticPattern
 A pattern class to be used for the turning on and off of static projectors,
 most likely implemented as a grid over an LED. This pattern has no
 information other than type, as static projectors can only create a single
 pattern.
"""
    pass

class DLPPattern:
"""
 Class: DLPPattern
 A pattern class to be used for the display of arbitrary patterns on DLP
 projectors. This class contains a matrix that represents the pixel values to
 be projected. This matrix is set at construction and used by DLP projectors
 to create a similar projected pattern.

 Properties:
 image - the image matrix that defines this projection
"""
    pass

class GeneratedPattern:
"""
 Class: GeneratedPattern
 This class represents the light field generated by a projector. It factors in
 the distortion and calibration of the projector in its image, and takes into
 account multiple projectors, if multiple projectors are used. It also
 contains a reference to the projectors that created the pattern for easy
 access later on.

 Properties:
 image - ndarray The projected image, in matrix form
 projectors - A list of the <Projector>s used to create the image
"""
    def __init__(self, img, projectors):
        self.image = img
        self.projectors = projectors

def gray_code_patterns(width, height, horizontal_stripes=True):
    """
    Function: gray_code_patterns
    Generates a list of <DLPPattern> objects corresponding to a sequence of
    gray codes to be projected

    Parameters:
    width - *int* Pixel width of the pattern
    height - *int* Pixel height of the pattern
    horizontal_stripes - *boolean* If true, generate horizontal stripes,
    otherwise, generate vertical stripes

    Returns:
    *[<DLPPattern>]* list of patterns for the Gray code
    """
    pass
